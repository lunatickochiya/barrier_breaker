diff --git a/options.h b/options.h
index a75cfa3..da3962e 100644
--- a/options.h
+++ b/options.h
@@ -305,6 +305,7 @@
 	struct list_head masq_src;
 	struct list_head masq_dest;
 
+	bool fullcone;
 	bool conntrack;
 	bool mtu_fix;
 
diff --git a/zones.c b/zones.c
index 505ab20..8ed5f99 100644
--- a/zones.c
+++ b/zones.c
@@ -69,6 +69,8 @@
 	FW3_LIST("masq_src",           network,  zone,     masq_src),
 	FW3_LIST("masq_dest",          network,  zone,     masq_dest),
 
+	FW3_OPT("fullcone",            bool,     zone,     fullcone),
+
 	FW3_OPT("extra",               string,   zone,     extra_src),
 	FW3_OPT("extra_src",           string,   zone,     extra_src),
 	FW3_OPT("extra_dest",          string,   zone,     extra_dest),
@@ -548,7 +550,17 @@
 				if (!fw3_is_family(msrc, handle->family) ||
 				    !fw3_is_family(mdest, handle->family))
 					continue;
-
+				
+				if (zone->fullcone) {
+					r = fw3_ipt_rule_new(handle);
+					fw3_ipt_rule_src_dest(r, msrc, mdest);
+					fw3_ipt_rule_target(r, "FULLCONENAT");
+					fw3_ipt_rule_append(r, "zone_%s_postrouting", zone->name);
+					r = fw3_ipt_rule_new(handle);
+					fw3_ipt_rule_src_dest(r, msrc, mdest);
+					fw3_ipt_rule_target(r, "FULLCONENAT");
+					fw3_ipt_rule_append(r, "zone_%s_prerouting", zone->name);
+				} else
 				r = fw3_ipt_rule_new(handle);
 				fw3_ipt_rule_src_dest(r, msrc, mdest);
 				fw3_ipt_rule_target(r, "MASQUERADE");
